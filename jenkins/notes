Yes, you need to install Trivy on your Jenkins agent/server for the Scan Docker Image stage to work.
Trivy is a command-line tool and must be available in the system PATH where the Jenkins job runs.

What you need to do:
Install Trivy on your Jenkins agent/server
For Ubuntu, run:



sudo apt-get install wget apt-transport-https gnupg lsb-release
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy


No extra Jenkins configuration is needed
As long as Trivy is installed and available in the PATH, your pipeline stage will work.

(Optional) Test Trivy installation
Run trivy --version on your Jenkins agent/server to confirm it is installed.

Summary:
You must install Trivy on the Jenkins agent/server. No special Jenkins configuration is needed beyond that.



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
trivy scan 
----------

install trviy in your agent or server where you want to run the build

#!/bin/bash
sudo apt update
sudo apt install wget apt-transport-https gnupg lsb-release -y

wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -

echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list

sudo apt update
sudo apt install trivy -y

-------------------------------------------------------------------------------------

trivy to scan the docke image + the internall code i,e java code also use the below stage

 stage('Trivy Scan') {
            steps {
                dir('app') {
                    sh """
                        trivy image --exit-code 1 --severity CRITICAL,HIGH --format json -o trivy-report.json ${DOCKER_IMAGE}:${DOCKER_TAG}
                        trivy image --format template --template "@contrib/html.tpl" -o trivy-report.html ${DOCKER_IMAGE}:${DOCKER_TAG}
                    """
                    archiveArtifacts artifacts: 'trivy-report.*', fingerprint: true
                }
            }
        }

trivy image --severity CRITICAL,HIGH --format table akhilmylaram/vprofile-app:latest
generates reports locally


to scan just on the docker image / not the java code use the below command

trivy image --scanners vuln --vuln-type os --severity CRITICAL,HIGH akhilmylaram/vprofile-app:latest


To see what Trivy is scanning by default, run:
trivy image --list-all-pkgs akhilmylaram/vprofile-app:latest

Or list all scanners:
trivy image --help

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
for sonarqube scanner

docker run -d --name sonarqube \
  -p 9000:9000 \
  -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
  sonarqube:community

Open a browser: http://<your-server-ip>:9000

Login with default credentials:

Username: admin

Password: admin

Change the password when prompted.

Go to “My Account” → “Security” → Generate a new token.

Name it e.g., jenkins-token

Copy the token (you’ll use this in Jenkins)

-------
Go to Jenkins Dashboard → Manage Jenkins → Global Tool Configuration

Under SonarQube Scanner, click Add SonarQube Scanner

Name: sonar

Set the path to your sonar-scanner binary (if installed manually)

OR allow Jenkins to auto-install

---------
Add SonarQube Server to Jenkins
Go to Manage Jenkins → Configure System

Search for SonarQube servers

Click Add SonarQube

Name: SonarQube

Server URL: http://localhost:9000 (or your IP)

Add the SonarQube Token as a Jenkins Secret Text Credential and select it here.

for adding the quality gate
open the created poject --settings -- webhooks
http://<JENKINS_URL>/sonarqube-webhook/
----------------------------------------------------------------------------

