server:
  persistentVolume:
    size: 20Gi
  retention: 30d
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - prometheus-server
          topologyKey: "kubernetes.io/hostname"

alertmanager:
  persistentVolume:
    enabled: true
    size: 5Gi
  replicaCount: 2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  config:
    route:
      group_by: ['alertname', 'job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'email'
    receivers:
    - name: 'email'
      email_configs:
      - to: 'alerts@example.com'
        send_resolved: true

nodeExporter:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 180Mi
    requests:
      cpu: 100m
      memory: 180Mi

kubeStateMetrics:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 100Mi

pushgateway:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# Additional scrape configurations for vprofile app
extraScrapeConfigs: |
  - job_name: 'vprofile-app'
    metrics_path: '/actuator/prometheus'
    kubernetes_sd_configs:
    - role: endpoints
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name]
      action: keep
      regex: vproapp-service