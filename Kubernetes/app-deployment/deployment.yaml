apiVersion: apps/v1
kind: Deployment
metadata:
  name: vproapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vproapp
  template:
    metadata:
      labels:
        app: vproapp
    spec:
      containers:
        - name: vproapp
          image: akhilmylaram/vprofile-app:v1  # Use your updated non-root image tag if different
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          # The following configuration defines Kubernetes liveness and readiness probes for the application container.
          # - The livenessProbe checks the /login endpoint on port 8080 every 10 seconds, starting 30 seconds after the container starts.
          #   This ensures that the application is running and healthy; if the probe fails, Kubernetes will restart the container.
          # - The readinessProbe checks the same /login endpoint on port 8080 every 5 seconds, starting 10 seconds after the container starts.
          #   This determines when the application is ready to accept traffic; if the probe fails, the container will be removed from service endpoints.
          # Using these probes helps maintain application availability and reliability by enabling automated health checks and recovery.
          livenessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          # The securityContext section ensures that the container runs as a non-root user for enhanced security.
          # - runAsNonRoot: true enforces that the container process cannot run as the root user.
          # - runAsUser: 1000 specifies the user ID the container process should run as, which must be a non-root user.
          # These settings help to minimize the risk of privilege escalation attacks within the container.
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000